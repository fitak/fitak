extensions:
	dibi: Dibi\Bridges\Nette\DibiExtension22
	orm: Nextras\Orm\Bridges\NetteDI\OrmExtension
	events: Kdyby\Events\DI\EventsExtension
	console: Kdyby\Console\DI\ConsoleExtension
	facebook: Kdyby\Facebook\DI\FacebookExtension
	dbal: Nextras\Dbal\Bridges\NetteDI\DbalExtension

http:
	frames: yes

php:
	date.timezone: Europe/Prague


application:
	errorPresenter: 'Error'

di:
	debugger: true

tracy:
	strictMode: true

security:
	debugger: true

session:
	autoStart: smart
	expiration: +90 days


orm:
	model: Fitak\Orm

database:
	default:
		dsn: "mysql:host=%database.host%;dbname=%database.database%"
		user: %database.user%
		password: %database.password%
		debugger: true
		explain: true
		autowired: true

dbal:
	driver: mysqli
	dsn: "mysql:host=%database.host%;dbname=%database.database%"
	user: %database.user%
	password: %database.password%
	database: %database.database%
	charset: utf8mb4
	debugger: true
	explain: true

facebook:
	appId: %fb.appId%
	appSecret: %fb.appSecret%
	permissions: %fb.permissions%
	graphVersion: %fb.graphVersion%

events:
	debugger: false

console:
	url: http://fitak.dev/
	commands:
		- Bin\Commands\Auth\Facebook
		- Bin\Commands\Crawler\Facebook
		- Bin\Commands\Elastic\Reindex

dibi:
	driver: pdo
	charset: utf8
	profiler: true
	resource: @pdo


parameters:
	fb:
		permissions: [user_groups, read_stream]
		graphVersion: "v2.5"
	elastic:
		solrPath: %appDir%/../synonyms.solr
		hosts:
			- 127.0.0.1

services:
	data: Data
	elasticSearch: ElasticSearch(%elastic%, %appDir%)
	elasticSearchUpdater: { class: Fitak\ElasticSearchUpdater, tags: [kdyby.subscriber] }
	highlighter: Highlighter
	kosApi: Fitak\KosApi(%kosapi.username%, %kosapi.password%)
	migrationsDriver: Nextras\Migrations\Drivers\MySqlNetteDbDriver(..., migrations)
	pdo: @Nette\Database\Connection::getPdo()
	tags: Tags
	tagsImporter: Fitak\TagsImporter
	signInManager: Fitak\SignInManager
	signUpManager: Fitak\SignUpManager
#	orm: Fitak\Orm
#	repositoryContainer: Fitak\Orm
	postManager: Fitak\PostManager
	passwordResetManager: Fitak\PasswordResetManager
	searchQueryParser: SearchQueryParser
	linkFactory: Nextras\Application\LinkFactory
	templateMacrosFactory:
		implement: Fitak\ITemplateMacrosFactory
		arguments: [%compiler%, ..., %productionMode%, %wwwDir%/build/hash.txt]
		parameters: [Latte\Compiler compiler]
	templateFilters: Fitak\TemplateFilters
	templateFactory: Fitak\TemplateFactory
	routerFactory: RouterFactory(%router.useHttps%)
	router: @routerFactory::create
	keyValueStorage: KeyValueStorage
	crawler.facebook: Fitak\Crawler\Facebook(%fb.appId%, %fb.appSecret%, %fb.permissions%, %fb.graphVersion%)
